<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--spring配置文件： 声明service，dao，工具类等对象-->

    <context:property-placeholder location="classpath:conf/jdbc.properties" />

    <!--声明数据源，连接数据库-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!--SqlSessionFactoryBean创建SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation"  value="classpath:conf/mybatis.xml" />
    </bean>
    
    <!--声明mybatis的扫描器，创建dao对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 指定SqlSession对象的id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 指定包名 包名是dao接口所在包名
            MapperScannerConfigurer会扫描这个包中所有接口
            来执行getMapper(dao.class)方法,得到每个接口的dao对象放入Spring中
            创建号的dao对象放入容器中,默认名称是首字母小写
        -->
        <property name="basePackage" value="jiangmh.demo.crm.settings.dao,
                                            jiangmh.demo.crm.workbench.dao"/>
    </bean>

    <bean id="dicService" class="jiangmh.demo.crm.workbench.service.impl.DicServiceImpl">
        <property name="dicTypeDao" ref="dicTypeDao"/>
        <property name="dicValueDao" ref="dicValueDao"/>
    </bean>

    <!--声明service的注解@Service所在的包名位置-->
    <context:component-scan base-package="jiangmh.demo.crm.settings.service"/>
    <context:component-scan base-package="jiangmh.demo.crm.workbench.service"/>
    <!--事务配置：注解的配置， aspectj的配置-->


    <!--使用spring事务处理-->
    <!--1.声明事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--连接数据库 指定数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--开启事务注解驱动
        transaction-manager : 事务管理器对象的id
    -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>